# This is the l2_fdb.yml helper playbook, 
# and in this playbook verify mac flapping.

- set_fact:
    vlan_id: 209
    vlan_ports_list: [1,2,3]
    mac1: 00:00:00:00:00:09
    
- set_fact: port1_name="{{item.dev}}"
  when: item.port_index == '{{vlan_ports_list[0]}}'
  with_items: fdb_ports_list
  
- set_fact: port2_name="{{item.dev}}"
  when: item.port_index == '{{vlan_ports_list[1]}}'
  with_items: fdb_ports_list

- block:
  - name: Clear fdb all
    shell: sonic-clear fdb all
    become: true

  - name: Create Vlan{{vlan_id}}
    shell: config vlan add {{vlan_id}}
    become: true
    
  - name: Add ports to vlan with untagged mode
    include: roles/test/tasks/l2/l2_fdb/assist/l2_fdb_add_port_to_vlan_untagged.yml
    with_items: vlan_ports_list

  - name: Testcase9_step1 Send packet with mac1 as source mac from port1, then verify packet is forwarded right when sending packet with mac1 as dst mac from port3
    include: roles/test/tasks/ptf_runner.yml
    vars:
        ptf_test_name: l2_fdb test
        ptf_test_dir: ptftests
        ptf_test_path: l2_fdb.L2FdbTest
        ptf_platform_dir: ptftests
        ptf_platform: remote
        ptf_test_params:
          - testbed_type=\"{{ testbed_type }}\"
          - test_case=\"case9\"
          - test_step=\"step1\"
          - pkt_num=\"0\"
          - test_member_list1=\"{{ vlan_ports_list}}\"
          - test_member_list2=\"0\"
          - test_mac1=\"{{mac1}}\"
          - test_mac2=\"0\"
          - test_case_str=\"Testcase9_step1 Send packet with mac1 as source mac from port1, then verify packet is forwarded right when sending packet with mac1 as dst mac from port3\"
        ptf_extra_options: "--relax --debug info --log-file /tmp/l2_fdb_test9_step1.log"

  - name: Testcase9_step2 Send packet with mac1 as source mac from port2, then verify packet is forwarded right when sending packet with mac1 as dst mac from port3
    include: roles/test/tasks/ptf_runner.yml
    vars:
        ptf_test_name: l2_fdb test
        ptf_test_dir: ptftests
        ptf_test_path: l2_fdb.L2FdbTest
        ptf_platform_dir: ptftests
        ptf_platform: remote
        ptf_test_params:
          - testbed_type=\"{{ testbed_type }}\"
          - test_case=\"case9\"
          - test_step=\"step2\"
          - pkt_num=\"0\"
          - test_member_list1=\"{{ vlan_ports_list}}\"
          - test_member_list2=\"0\"
          - test_mac1=\"{{mac1}}\"
          - test_mac2=\"0\"
          - test_case_str=\"Testcase9_step2 Send packet with mac1 as source mac from port2, then verify packet is forwarded right when sending packet with mac1 as dst mac from port3\"
        ptf_extra_options: "--relax --debug info --log-file /tmp/l2_fdb_test9_step2.log"
  
  - name: Testcase9_step3 Send multiple packets alternately on port1 and port2 
    include: roles/test/tasks/ptf_runner.yml
    vars:
        ptf_test_name: l2_fdb test
        ptf_test_dir: ptftests
        ptf_test_path: l2_fdb.L2FdbTest
        ptf_platform_dir: ptftests
        ptf_platform: remote
        ptf_test_params:
          - testbed_type=\"{{ testbed_type }}\"
          - test_case=\"case9\"
          - test_step=\"step3\"
          - pkt_num=\"0\"
          - test_member_list1=\"{{ vlan_ports_list}}\"
          - test_member_list2=\"0\"
          - test_mac1=\"{{mac1}}\"
          - test_mac2=\"0\"
          - test_case_str=\"Testcase9_step3 Send multiple packets alternately on port1 and port2\"
        ptf_extra_options: "--relax --debug info --log-file /tmp/l2_fdb_test9_step3.log"
        
#  - shell: show mac
#    become: true
#    register: result

#  - set_fact: current_learn_port_index=1
#    when: result.stdout.find("{{mac1}}  {{port1_name}}") != -1

#  - set_fact: current_learn_port_index=2
#    when: result.stdout.find("{{mac1}}  {{port2_name}}") != -1

#  - name: Testcase9_step4 Send packet with mac1 as dst mac from port3, then verify packet is received from port{{current_learn_port_index}}
#    include: roles/test/tasks/ptf_runner.yml
#    vars:
#        ptf_test_name: l2_fdb test
#        ptf_test_dir: ptftests
#        ptf_test_path: l2_fdb.L2FdbTest
#        ptf_platform_dir: ptftests
#        ptf_platform: remote
#        ptf_test_params:
#          - testbed_type=\"{{ testbed_type }}\"
#          - test_case=\"case9\"
#          - test_step=\"step4\"
#          - pkt_num=\"0\"
#          - test_member_list1=\"{{ vlan_ports_list}}\"
#          - test_member_list2=\"[{{current_learn_port_index}}]\"
#          - test_mac1=\"{{mac1}}\"
#          - test_mac2=\"0\"
#          - test_case_str=\"Testcase9_step4 Send packet with mac1 as dst mac from port3, then verify packet is received from port{{current_learn_port_index}}\"
#        ptf_extra_options: "--relax --debug info --log-file /tmp/l2_fdb_test9_step4.log"

  rescue:
    - set_fact: failed_case="{{failed_case + ['l2_fdb_case9']}}"

  always:
    - name: Del ports from Vlan{{vlan_id}}
      include: roles/test/tasks/l2/l2_fdb/assist/l2_fdb_del_port_from_vlan.yml
      with_items: vlan_ports_list

    - name: Del Vlan{{vlan_id}}
      shell: config vlan del {{ vlan_id }}
      become: true
      ignore_errors: true

